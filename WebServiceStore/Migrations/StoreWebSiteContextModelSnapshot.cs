// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebServiceStore.Models;

namespace WebServiceStore.Migrations
{
    [DbContext(typeof(StoreWebSiteContext))]
    partial class StoreWebSiteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebServiceStore.Models.Categories", b =>
                {
                    b.Property<int>("CategorieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("CategorieId");

                    b.HasIndex("StatusId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("WebServiceStore.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DomicilioId")
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnName("mail")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnName("phone")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("ClientId");

                    b.HasIndex("DomicilioId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("WebServiceStore.Models.Domicilio", b =>
                {
                    b.Property<int>("DomicilioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("CodigoPostal")
                        .HasColumnType("int");

                    b.Property<string>("Colonia")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("NumExt")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("DomicilioId");

                    b.ToTable("Domicilio");
                });

            modelBuilder.Entity("WebServiceStore.Models.MetodoPago", b =>
                {
                    b.Property<int>("MetodoPagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Oxxo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Paypal")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Tarjeta")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("MetodoPagoId");

                    b.ToTable("MetodoPago");
                });

            modelBuilder.Entity("WebServiceStore.Models.OrderDetails", b =>
                {
                    b.Property<int>("DetallePedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("DetallePedidoId");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("WebServiceStore.Models.Pedidos", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("DomicilioId")
                        .HasColumnType("int");

                    b.Property<int>("MetodoPagoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("PedidoId");

                    b.HasIndex("MetodoPagoId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("WebServiceStore.Models.ProductCategorie", b =>
                {
                    b.Property<int>("ProductCategorieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Product_CategorieId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategorieId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("ProductCategorieId");

                    b.HasIndex("CategorieId");

                    b.HasIndex("ProductId");

                    b.ToTable("Product_Categorie");
                });

            modelBuilder.Entity("WebServiceStore.Models.Products", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("ProductId")
                        .HasName("PK_Products_1");

                    b.HasIndex("StatusId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WebServiceStore.Models.ShopCar", b =>
                {
                    b.Property<int>("ShopcarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("ShopcarId");

                    b.HasIndex("ProductId");

                    b.ToTable("ShopCar");
                });

            modelBuilder.Entity("WebServiceStore.Models.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("StatusId");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("WebServiceStore.Models.Categories", b =>
                {
                    b.HasOne("WebServiceStore.Models.Status", "Status")
                        .WithMany("Categories")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_Categories_Status")
                        .IsRequired();
                });

            modelBuilder.Entity("WebServiceStore.Models.Client", b =>
                {
                    b.HasOne("WebServiceStore.Models.Domicilio", "Domicilio")
                        .WithMany("Client")
                        .HasForeignKey("DomicilioId")
                        .HasConstraintName("FK_Client_Domicilio")
                        .IsRequired();
                });

            modelBuilder.Entity("WebServiceStore.Models.OrderDetails", b =>
                {
                    b.HasOne("WebServiceStore.Models.Pedidos", "Pedido")
                        .WithMany("OrderDetails")
                        .HasForeignKey("PedidoId")
                        .HasConstraintName("FK_OrderDetails_Pedidos")
                        .IsRequired();

                    b.HasOne("WebServiceStore.Models.Products", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_OrderDetails_Products")
                        .IsRequired();
                });

            modelBuilder.Entity("WebServiceStore.Models.Pedidos", b =>
                {
                    b.HasOne("WebServiceStore.Models.MetodoPago", "MetodoPago")
                        .WithMany("Pedidos")
                        .HasForeignKey("MetodoPagoId")
                        .HasConstraintName("FK_Pedidos_MetodoPago")
                        .IsRequired();
                });

            modelBuilder.Entity("WebServiceStore.Models.ProductCategorie", b =>
                {
                    b.HasOne("WebServiceStore.Models.Categories", "Categorie")
                        .WithMany("ProductCategorie")
                        .HasForeignKey("CategorieId")
                        .HasConstraintName("FK_Product_Categorie_Categories")
                        .IsRequired();

                    b.HasOne("WebServiceStore.Models.Products", "Product")
                        .WithMany("ProductCategorie")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Product_Categorie_Products")
                        .IsRequired();
                });

            modelBuilder.Entity("WebServiceStore.Models.Products", b =>
                {
                    b.HasOne("WebServiceStore.Models.Status", "Status")
                        .WithMany("Products")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_Products_Status")
                        .IsRequired();
                });

            modelBuilder.Entity("WebServiceStore.Models.ShopCar", b =>
                {
                    b.HasOne("WebServiceStore.Models.Products", "Product")
                        .WithMany("ShopCar")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_ShopCar_Products")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
